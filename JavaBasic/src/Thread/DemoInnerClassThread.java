package Thread;

/*
 * 匿名内部类方式实现线程的创建
 * 内部类：写在其他类内部的类
 * 
 * 匿名内部类作用：简化代码
 * 		把子类继承父类，重写父类方法，创建子类对象合成一步完成
 * 		把实现类实现接口，重写接口方法，创建实现类对象合成一步完成
 * 匿名内部类的最终产物：子类/实现类对象，而这个类没有名字
 * 
 * 格式：
 * 		new 父类/接口(){
 * 		重写方法
 * };
 */
public class DemoInnerClassThread {

	public static void main(String[] args) {
		//线程父类Thread
		//new Thread().start();
		new Thread() {
			@Override
			public void run() {
				for (int i = 0; i < 10; i++) {
					System.out.println(Thread.currentThread().getName());
				}
			}
		}.start();;

		Runnable r = new Runnable() {
			@Override
			public void run() {
				
				for (int i = 0; i < 10; i++) {
					System.out.println(Thread.currentThread().getName()+"qq");
				}
			}
		};
		new Thread(r).start();
			
			
	}
}


