package Thread;
/*
 * 创建多线程程序的第二种方式：实现Runnable接口
 * Runnable 接口应该由那些打算通过某一线程执行其实例的类来实现。类必须定义一个称为 run 的无参数方法。 

	Thread类的构造方法：     
		Thread(Runnable target) 
		          分配新的 Thread 对象。 
		Thread(Runnable target, String name) 
		          分配新的 Thread 对象。 

	实现步骤：
		1.创建一个Runnable接口的实现类
		2.在实现类中重写Runnable接口的run方法，设置线程任务
		3.创建一个Runnable接口的实现类对象
		4.创建Thread类对象，构造方法中传递Runnable接口的实现类对象
		5.调用Thread类中的start方法，开启新的线程，执行run方法
		
	实现Runnable接口创建多线程程序的好处：
		1.避免了单继承的局限性
			一个类只能继承一个类，继承了Thread类就不能继承其他类
			实现Runnable接口还可以继承其他类，实现其他接口
		2.增强了程序的扩展性，降低了程序的耦合性
			实现Runnable接口的方式，把设置线程任务和开启新线程进行了分离（解耦）
 */
public class DemoRunnable {
	public static void main(String[] args) {
		//新线程
		RunnableImpl run = new RunnableImpl();
		Thread t = new Thread(run);
		t.start();
		
		//主线程
		for (int i = 0; i < 10; i++) {
			System.out.println(Thread.currentThread().getName()+" ： "+i);
		}
		
	}	

		
		
}
